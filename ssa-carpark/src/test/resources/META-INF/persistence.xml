<persistence version="2.0"
   xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="
        http://java.sun.com/xml/ns/persistence
        http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
   <!-- <persistence-unit name="primary">
      If you are running in a production environment, add a managed 
         data source, this example data source is just for development and testing!
      The datasource is deployed as WEB-INF/spring-quickstart-ds.xml, you
         can find it in the source at src/main/webapp/WEB-INF/spring-quickstart-ds.xml
      <jta-data-source>java:jboss/datasources/SpringQuickstartDS</jta-data-source>
      <properties>
		 <property name="jboss.entity.manager.factory.jndi.name" value="java:jboss/spring-quickstart/persistence" />
         Properties for Hibernate
         <property name="hibernate.hbm2ddl.auto" value="create-drop" />
         <property name="hibernate.show_sql" value="false" />
      </properties>
   </persistence-unit> -->
   
   
<persistence-unit name="ssaCarPark" transaction-type="RESOURCE_LOCAL">
		<provider>org.hibernate.ejb.HibernatePersistence</provider>
		
		<!-- JNDI of the data source -->
		<!-- <non-jta-data-source>java:comp/env/jdbc/images</non-jta-data-source> -->
		<class>com.au.sofico.dao.entity.SsaEmployees</class>
		<class>com.au.sofico.dao.entity.SsaParkingSpots</class>
		 <class>com.au.sofico.dao.entity.SsaEmployeeParkingMapping</class>
		<properties>
			<!-- Database connection settings -->
			<property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/ssaparking" /> 
			<property name="javax.persistence.jdbc.user" value="root" /> 
			<property name="javax.persistence.jdbc.password" value="admin" />
			<!-- SQL dialect -->
			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect" />
			<!-- Create/update tables automatically using mapping metadata -->
			<!-- <property name="hibernate.hbm2ddl.auto" value="update" /> -->
			<!-- Pretty print the SQL in the log file and console -->
			<property name="hibernate.format_sql" value="true" />
			<property name="hibernate.show_sql" value="true" />
		</properties>	

	</persistence-unit>
</persistence>

